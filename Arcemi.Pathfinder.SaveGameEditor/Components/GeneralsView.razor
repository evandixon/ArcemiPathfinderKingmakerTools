@using System.IO
@inject MainViewModel Model

@if (!Leaders.Any()) {
    <p class="alert alert-info">No generals found.</p>
}
else {
    <ul class="portraits leaders">
        @foreach (var unit in Leaders) {
        <li @onclick="() => SelectLeader(unit)" class="@(Unit == unit ? "toggled" : "")">
            <img src="/api/proxy/@Uri.EscapeDataString(unit.PortraitPath)" alt="Portrait" />
            <span>@unit.DisplayName</span>
        </li>
        }
    </ul>
    @if (Unit != null) {
        <div class="row g-3">
            <div class="col-md-6">
                <label class="form-label">Blueprint</label>
                <input class="form-control" type="text" readonly="readonly" value="@Unit.BlueprintRef" />
            </div>
            <div class="col-md-6">
                <label class="form-label">Identifier</label>
                <input class="form-control" type="text" readonly="readonly" value="@Unit.LeaderGuid" />
            </div>
        </div>
        <div class="row g-3">
            <div class="col-md-3">
                <label class="form-label">Experience</label>
                <input class="form-control" type="number" @bind="@Unit.Experience" />
            </div>
            <div class="col-md-3">
                <label class="form-label">
                    Level
                    <Help Size="ElementSize.Small">
                        Lower the level does not remove any feats.
                        So you can gain all feats by level up the general multiple times.
                    </Help>
                </label>
                <input class="form-control" type="number" min="1" @bind="@Unit.Level" />
            </div>
            <div class="col-md-3">
                <label class="form-label">Current Mana</label>
                <input class="form-control" type="number" @bind="@Unit.Stats.CurrentMana" />
            </div>
        </div>
        <div class="row">
            <h3 class="col-md-12">
                Attributes
                <Help Size="ElementSize.Small" Position="TooltipPosition.BottomRight">
                    The game re-calculates these stats when loading the save file.
                </Help>
            </h3>
        </div>
        <div class="form-list static-content">
            <div class="row">
                <div class="col-md-4">
                    <label class="form-label">Name</label>
                </div>
                <div class="col-md-2">
                    <label class="form-label">Value</label>
                </div>
            </div>
            @foreach (var attr in Unit.Stats) {
                <div class="row g-3">
                    <div class="col-md-4">
                        <label class="form-label">@attr.Name</label>
                    </div>
                    <div class="col-md-2">
                        <input class="form-control" type="number" readonly="readonly" @bind="@attr.BaseValue" />
                    </div>
                </div>
            }
        </div>
    }
}

@code {
    private PlayerLeaderModel Unit;

    private IEnumerable<PlayerLeaderModel> Leaders => Model.Player.LeadersManager?.Leaders?.Where(l => l.IsFactionCrusaders()) ?? Array.Empty<PlayerLeaderModel>();

    private void SelectLeader(PlayerLeaderModel unit)
    {
        Unit = unit;
    }
}